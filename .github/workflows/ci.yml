name: Python package

on: [push]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.13"]

    steps:
      - uses: actions/checkout@v5
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v6
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
      - name: Set up Node.js
        uses: actions/setup-node@v5
        with:
          node-version: '22.x'
          # cache: 'yarn'
          working-directory: ./static
      - name: Enable corepack
        working-directory: ./static
        run: |
          corepack enable
      - name: Install node.js dependencies (yarn)
        working-directory: ./static
        run: |
          yarn --frozen-lockfile

      # You can test your matrix by printing the current Python version
      - name: Display Python version
        run: python -c "import sys; print(sys.version)"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Generate pygments CSS
        run: |
          pygmentize -S default -f html > static/src/pygments.css
      - name: Build project frontend (yarn)
        working-directory: ./static
        run: |
          yarn build
      - name: Test with pytest
        run: |
          pytest --doctest-modules --junitxml=pytest/test-results.xml
      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: (!cancelled())
        with:
          files: |
            pytest/**/*.xml
